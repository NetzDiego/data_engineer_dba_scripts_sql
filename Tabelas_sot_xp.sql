CREATE TABLE IF NOT EXISTS xp.unmasked_captacao_resgate
(
    id int   NOT NULL GENERATED ALWAYS AS IDENTITY,
    client_id int NOT NULL,
    effective_date date NOT NULL,
    movement_type VARCHAR(100) COLLATE pg_catalog."default",
    sub_type      VARCHAR(100) COLLATE pg_catalog."default",
    asset_id      VARCHAR(40) COLLATE pg_catalog."default",
    value         numeric(20,8) NOT NULL,
    data_extracao date DEFAULT CURRENT_DATE,
    ativo         VARCHAR(50) COLLATE pg_catalog."default",
    custodiante   VARCHAR(50) COLLATE pg_catalog."default" DEFAULT 'XP'::text,
    CONSTRAINT xp_captacao_resgate_v2_pkey PRIMARY KEY (id)
)


CREATE TABLE IF NOT EXISTS xp.unmasked_clients
(   id int   NOT NULL GENERATED ALWAYS AS IDENTITY  PRIMARY KEY,       
    customer_code  INT,
    signature_date DATE,
    cancellation_date timestamp without time zone,
    customer_partner_login  VARCHAR(50) COLLATE pg_catalog."default",
    status VARCHAR(20),
    data_extracao  DATE,
    new_client boolean)
	

CREATE TABLE IF NOT EXISTS xp.unmasked_evolution
(   id int   NOT NULL GENERATED ALWAYS AS IDENTITY  PRIMARY KEY,
    wealth double precision,
    checking_account double precision,
    variable_income double precision,
    fixed_income double precision,
    repo double precision,
    pension double precision,
    investment_funds double precision,
    national_treasury double precision,
    investment_clubs double precision,
    total_events double precision,
    date DATE,
    value double precision,
    reference_date DATE,
    equity_variation DECIMAL(5,2),
    client_id int,
    rate double precision,
    indexer int,
    data_extracao date DEFAULT CURRENT_DATE
)


CREATE TABLE IF NOT EXISTS xp.unmasked_movements
(   id int   NOT NULL GENERATED ALWAYS AS IDENTITY  PRIMARY KEY,
    client_id character varying COLLATE pg_catalog."default",
    advisor_code character varying COLLATE pg_catalog."default",
    event_type text COLLATE pg_catalog."default",
    effective_date timestamp without time zone,
    original_date timestamp without time zone,
    asset_id character varying COLLATE pg_catalog."default",
    quantity double precision,
    gross_value numeric(20,8),
    unit_price numeric(20,8),
    asset character varying COLLATE pg_catalog."default",
    operation_type character varying COLLATE pg_catalog."default",
    asset_classification character varying COLLATE pg_catalog."default",
    cetip_selicCode character varying COLLATE pg_catalog."default",
    due_date timestamp without time zone,
    product_type character varying COLLATE pg_catalog."default",
    data_extracao timestamp without time zone,
    strategy character varying COLLATE pg_catalog."default",
    index_percentage numeric(20,8),
    index character varying COLLATE pg_catalog."default",
    tax numeric(20,8),
    issuer character varying COLLATE pg_catalog."default",
    settlement_date  timestamp without time zone,
    operation_date timestamp without time zone,
    type text COLLATE pg_catalog."default",
    net_value double precision,
    quote_date timestamp without time zone,
    fund_cnpj character varying COLLATE pg_catalog."default",
    amount double precision,
    price double precision,
    ir double precision,
    iof numeric(20,8),
    isin character varying COLLATE pg_catalog."default",
    opening_quantity numeric(20,8),
    closing_quantity numeric(20,8)
)

CREATE TABLE IF NOT EXISTS xp.unmasked_movements
(   id int     NOT NULL GENERATED ALWAYS AS IDENTITY  PRIMARY KEY,
    client_id  int,
    advisor_code varchar(50),
    event_type   varchar(50),
    effective_date date,
    original_date  date,
    asset_id VARCHAR(50),
    quantity double precision,
    gross_value numeric(20,8),
    unit_price numeric(20,8),
    asset VARCHAR(50),
    operation_type VARCHAR(50),
    asset_classification VARCHAR(50),
    cetip_selic_code VARCHAR(50) ,
    due_date DATE,
    product_type     VARCHAR(50),
    data_extracao    DATE,
    strategy         VARCHAR(50),
    index_percentage numeric(20,8),
    index            VARCHAR(50),
    tax              numeric(20,8),
    issuer           VARCHAR(100),
    settlement_date  DATE,
    operation_date   DATE,
    type             VARCHAR(50),
    net_value double precision,
    quote_date       DATE,
    fund_cnpj        VARCHAR(20),
    amount double precision,
    price double precision,
    ir double precision,
    iof numeric(20,8),
    isin       VARCHAR(20),
    opening_quantity numeric(20,8),
    closing_quantity numeric(20,8))


CREATE TABLE IF NOT EXISTS xp.unmasked_positions(
    id int NOT NULL GENERATED ALWAYS AS IDENTITY,
    "client_id"       int,
    "advisor_code"    varchar(20),
    "asset_id"        varchar(50),
    asset             varchar(50),
    "due_date"        date,
    "invoice_id"      int,
    "effective_date"  date,
    "opening_quantity" numeric(20,8),
    "opening_unit_price" numeric(20,8),
    "opening_value"      numeric(20,8),
    "closing_quantity"   numeric(20,8),
    "closing_unitPrice"  numeric(20,8),
    "closing_value"      numeric(20,8),
    "profit_andLoss"     numeric(20,8),
    yield                numeric(20,8),
    "previous_yield"     numeric(20,8),
    "accumulated_yield"  numeric(20,8),
    "gross_up_yield"     numeric(20,8),
    "gross_up_accumulated_yield" numeric(20,8),
    delta                numeric(20,8),
    "purchase_quantity"  numeric(20,8),
    "purchase_value"     numeric(20,8),
    "sale_quantity"      numeric(20,8),
    "sale_value"         numeric(20,8),
    percentage           numeric(20,8),
    rate                 numeric(20,8),
    "income_tax"         numeric(20,8),
    iof                  numeric(20,8),
    "unit_tax"           numeric(20,8),
    "total_tax"          numeric(20,8),
    "unit_amortisation"  numeric(20,8),
    "total_amortisation" numeric(20,8),
    "unit_prize"          numeric(20,8),
    "total_prize"         numeric(20,8),
    "creation_date"       date,
    status                varchar(10),
    strategy              varchar(20),
    "market_type"         varchar(50),
    "fund_cnpj"           VARCHAR(20),
    "original_date"       date,
    "original_value"      numeric(20,8),
    "original_quantity"   numeric(20,8),
    "quota_variation"     numeric(20,8),
    "original_quota"      numeric(20,8),
    "custody_transfer_in_quantity" numeric(20,8),
    "custody_transfer_in_amount" numeric(20,8),
    "adjuste_quota_quantity" numeric(20,8),
    "custody_transfer_out_quantity" numeric(20,8),
    "custody_transfer_out_amount" numeric(20,8),
    "adjuste_quota_value" numeric(20,8),
    "purchase_income_tax" numeric(20,8),
    "purchase_iof" numeric(20,8),
    "sale_income_tax" numeric(20,8),
    "sale_iof" numeric(20,8),
    "selling_value" numeric(20,8),
    "purchasing_value" numeric(20,8),
    "earning_value" numeric(20,8),
    "security_id"   NUMERIC(5,2),
    "certificate_id" NUMERIC(10,1),
    "gross_amount" numeric(20,8),
    "original_unit_price" numeric(20,8),
    "opening_sanitization_quantity" numeric(20,8),
    "opening_Sanitization_amount_value" numeric(20,8),
    "closing_sanitization_quantity" numeric(20,8),
    "closing_sanitization_amountValue" numeric(20,8),
    "opening_quoting_value" numeric(20,8),
    "closing_quoting_value" numeric(20,8),
    "cetip_selic_code" varchar(50),
    issuer varchar(100),
    "market_price" numeric(20,8),
    "purchased_date" date,
    "blocking_quantity" NUMERIC(5,1),
    "collateral_quantity" NUMERIC(5,1),
    "law_blocking_quantity" numeric(20,8),
    "unit_interest" numeric(20,8),
    "total_interest" numeric(20,8),
    "index_dsc" varchar(20),
    "unit_premium" numeric(20,8),
    "total_premium" numeric(20,8),
    "income_taxRate" numeric(20,8),
    "iof_rate" numeric(20,8),
    "closing_net_value" numeric(20,8),
    "cumulative_yield"  numeric(20,8),
    "gross_up_cumulative_yield" numeric(20,8),
    isin varchar(50),
    "remunerated_custody_opening_quantity" numeric(10,1),
    "remunerated_custody_closing_quantity" numeric(20,8),
    "remunerated_custody_opening_value" numeric(20,8),
    "remunerated_custody_closing_value" numeric(20,8),
    data_extracao date,
    product_type varchar(30),
    CONSTRAINT xp_api_positions_pkey PRIMARY KEY (id))


	CREATE TABLE IF NOT EXISTS xp.unmasked_statements(
    id int NOT NULL GENERATED ALWAYS AS IDENTITY,
    customer int,
    reference_date date,
    settlement_date date,
    description character varying(255) COLLATE pg_catalog."default",
    value double precision,
    balance double precision,
    data_extracao date DEFAULT CURRENT_DATE,
    CONSTRAINT xp_api_statements_pkey PRIMARY KEY (id))



